# -*- coding: utf-8 -*-
"""money.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1adUTexPz2U7VvUlFWOyBnEIpB9ESyREa
"""



import numpy as np
import matplotlib.pyplot as plt
from scipy import io
import pandas as pd

input_mat = pd.read_csv('/content/money.csv', encoding='euc-kr')

len(input_mat)

alpha = 0.7
n_samples = 18
time_end = 10

dt = time_end / n_samples
time = np.arange(0,time_end,dt)
x_meas_save = np.zeros(n_samples)
x_esti_save = np.zeros(n_samples)
x_avg_save = np.zeros(n_samples)

data=input_mat["money"]

def low_pass_filter(x_meas, x_esti,m_alpha):
    """Calculate average sonar using a low-pass filter."""
    x_esti = m_alpha * x_esti + (1 - alpha) * x_meas
    return x_esti

def average(k, x_avg_k_1, x_measure):
    alpha = (k-1)/k
    x_avg = alpha * x_avg_k_1 +(1-alpha)*x_measure
    return x_avg

x_esti = None
x_avg = 0
for i in range(n_samples):
    x_meas = data[i]
    k = i + 1
    x_avg_k = average(k, x_meas, x_avg)
    if i == 0:
        x_esti = x_meas
    else:
        x_esti = low_pass_filter(x_meas, x_esti, alpha)

    x_meas_save[i] = x_meas
    x_esti_save[i] = x_esti
    x_avg_save[i] = x_avg

plt.plot(time, x_meas_save, 'r*', label='Measured')
plt.plot(time, x_esti_save, 'b-', label='Low-pass Filter')
plt.legend(loc='upper left')
plt.title('Measured Altitudes v.s. LPF Values')
plt.xlabel('Time [sec]')
plt.ylabel('Altitude [m]')
plt.savefig('/png')