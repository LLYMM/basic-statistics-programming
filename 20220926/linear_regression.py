# -*- coding: utf-8 -*-
"""Linear_Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iv4l4YcF9Hoxcu0TsnSCLXkmXCPIe3wM
"""

import matplotlib.pyplot as plt
import numpy as np
from random import random

data = [ [4,6] , [8,5], [12,15], [16,12], [20.20]]
x = [4, 8, 12, 16, 20]
y = [6,5,15,12,20]

data = [[4,6], [8,5], [12,15], [16,12], [20,20]]

Data = np.array(data)

X = np.array(Data[:, 0])
Y = np.array(Data[:, 1])
X1 = np.zeros(5)
Y1 = np.zeros(5)

x_sum = X.sum()
y_sum = Y.sum()
x_avg = X.mean()
y_avg = Y.mean()

sum_xy = 0.0
sum_xx2 = 0.0

for i in range(0,len(X)):
    sum_xy += (X[i]- x_avg) * (Y[i]- y_avg)
    sum_xx2 += (X[i]- x_avg) * (X[i]- x_avg)
  
print(x_sum, y_sum, x_avg, y_avg)
print(sum_xy, sum_xx2)

a = sum_xy/sum_xx2
b = y_avg - a*x_avg

for i in range(0,len(X)):
     Y1[i] = X[i]*a+b
print(a,b)

plt.figure("Liner Regression")
plt.scatter(X,Y)
#plt.plot(X,Y, 'g--', X1, Y1, c='r')
plt.plot(X,Y1,c='r')
plt.show()

def predict(x,a,b):
    
    y =  a*x +b
    return y

predict(30, a, b)

x = np.array([4, 8, 12, 16, 20])
y = np.array([6, 5, 15, 12, 20])

A = np.vstack([x, np.ones(len(x))]).T

print(A)

m, c = np.linalg.lstsq(A, y, rcond = None)[0]

print(m, c)